#!/bin/sh
#  $Id$

#  Copyright 2003 Eduardo Sztokbant <du@du.eti.br>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

sw_version="1.0RC11"
sw_rev_date="$Date::             $"
software_revision="shalbum $sw_version - http://sourceforge.net/projects/shalbum - rev $sw_rev_date"

# TODO-LIST:
#   - HTML files should be created insite ${tmp_dir}

#######
# Input
#######

# read options specified in _title, _date and _mhd files (deprecated)
if [ -e _title ]; then
    title="`cat _title`"
else
    title="Album"
fi

if [ -e _date ]; then
    date="`cat _date`"
else
    date=""
fi

if [ -e _mhd ]; then
    mhd="yes"
else
    mhd="no"
fi

# process command-line options
while getopts a:d:e:himqr:t:vC:H:O:R:S:T:V:W: opt; do
  case $opt in
      # author's name
      a)  cl_author="$OPTARG"
	  ;;

      # date/subtitle
      d)  cl_date="$OPTARG"
	  ;;

      # author's e-mail
      e)  cl_email="$OPTARG"
	  ;;

      # index
      i)  cl_only_index="yes"
	  ;;

      # mhd
      m)  mhd="yes"
	  ;;

      # quiet
      q)  cl_quiet="yes"
	  ;;

      # third title
      r)  cl_third="$OPTARG"
	  ;;

      # title
      t)  cl_title="$OPTARG"
	  ;;

      # version
      v)  echo ${software_revision}
	  exit 1
	  ;;

      # number of columns
      C)  cl_n_columns="$OPTARG"
	  ;;

      # huge image resolution
      H)  cl_huge_res="$OPTARG"
	  ;;

      # order by
      O)  if [ "$OPTARG" = "time" ]; then
	    cl_order_by="time"
	  elif [ "$OPTARG" = "name" ]; then
	    cl_order_by="name"
	  else
	    echo "error: unexpected -O input value"
	    echo "valid values: [time|name]"
	    exit 1
	  fi
	  ;;

      # number of rows
      R)  cl_n_rows="$OPTARG"
	  ;;

      # slideshow time
      S)  cl_slideshow_time="$OPTARG"
	  ;;

      # thumbnail resolution
      T)  cl_th_res="$OPTARG"
	  ;;

      # vga resolution
      V)  cl_vga_res="$OPTARG"
	  ;;

      # table width
      W)  cl_table_width="$OPTARG"
	  ;;

      # help screen
      *)  echo ${software_revision}
	  echo "Usage: from a directory with image files run"
	  echo "    shalbum [options]"
	  echo ""
	  echo " -h        help screen"
	  echo " -v        show shalbum version and exit"
	  echo ""
	  echo " -t title  specify gallery title"
	  echo " -d date   specify gallery date/subtitle"
	  echo " -r title  specify gallery third title"
	  echo " -a name   specify gallery author's name"
	  echo " -e e-mail specify gallery author's e-mail"
	  echo ""
	  echo " -V num    specify vga resolution"
	  echo " -T num    specify thumbnail resolution"
	  echo " -H num    specify huge image resolution (\"copy\" to keep same)"
	  echo " -W num    specify table width"
	  echo " -R num    specify number of rows"
	  echo " -C num    specify number of columns"
	  echo " -O opt    image sorting option; either \"time\" or \"name\""
	  echo " -S secs   seconds per pic in slideshow mode; zero=off"
	  echo ""
	  echo " -m        selects mhd secondary set of default options"
	  echo " -i        don't resize images, only rebuild the HTML files"
	  echo " -q        quiet mode, supress output"
	  echo ""
	  echo "More options can be customized by using an _options file."
	  exit 1
	  ;;
  esac
done

# define default-options
if [ $mhd != "yes" ]; then
    # first set of default options
    vga_res=800                     # max width/heigth of final image
    th_res=250                      # max width/height of thumbnail
    huge_res=0                      # max width/height of huge image
    table_width=800                 # width of HTML tables
    n_rows=10                       # number of table rows
    n_columns=3                     # number of table columns
    pic_label_type="conf"           # number, filename, conf, none
    author="Eduardo Sztokbant"      # site author's name
    e_mail='du@du.eti.br'           # site author's e-mail
    third_title=""                  # string to be added to album's title
    watermark="no"                  # boolean to stamp watermarks
    watermark_th_src="$HOME/.shalbum/watermark_th.png"
                                    # source for thumbnail watermark
    watermark_vga_src="$HOME/.shalbum/watermark_vga.png"
                                    # source for final image watermark
    watermark_dissolve=60           # final image watermark dissolve percent
    thframe="yes"                   # enable thumbnail frame
    thframesize=2                   # size of thumbnail frame
    vgaframe="yes"                  # enable final image frame
    vgaframesize=3                  # size of final image frame
    hugeframe="no"                  # enable huge image frame
    hugeframesize=3                 # size of huge image frame
    th_quality=75                   # thumbnail percentage quality
    vga_quality=75                  # final image percentage quality
    huge_quality=75                 # huge image percentage quality
    back_link=""                    # link to go back
    backlink_label=""               # back link label for album list site
    backlink_label_thumbs="&lt;&lt;&lt; thumbnails"
                                    # back link label for thumbnails page
    credits_str=""                  # credit information
    support_shalbum="yes"           # print link to shalbum site
    w3c_ok_banner="yes"             # print "W3C HTML 4.01 compliant" banner

    multi_html="yes"                # use one html page per picture?
    th_on_multi="yes"               # show thumbnail for next/last pics?
    long_description="yes"          # attach long description to pic page?
    slideshow_time="5"              # seconds per pic in slideshow mode zero=off
    order_by="time"                 # how to order the images

    # HTML layout
    color_text="#ffffff"
    color_bgcolor="#000000"
    color_link="#ffffff"
    color_vlink="#888888"
    color_alink="#ff0000"
    font_face="Arial, Helvetica"
else
    # Mostly Harmless Decisions
    # secondary set of default options, selected with "-m" in command-line
    vga_res=500                     # max width/heigth of final image
    th_res=140                      # max width/height of thumbnail
    huge_res=0                      # max width/height of huge image
    table_width=520                 # width of HTML tables
    n_rows=16                       # number of table rows
    n_columns=3                     # number of table columns
    pic_label_type="number"         # number, filename, conf, none
    author="Meia Hora Depois"       # site author's name
    e_mail='banda@meiahoradepois.com'
                                    # site author's e-mail
    third_title="Meia Hora Depois"  # string to be added to album's title
    watermark="yes"                 # boolean to stamp watermarks
    watermark_th_src="$HOME/.shalbum/watermark_th.png"
                                    # source for thumbnail watermark
    watermark_vga_src="$HOME/.shalbum/watermark_vga.png"
                                    # source for final image watermark
    watermark_dissolve=60           # final image watermark dissolve percent
    thframe="yes"                   # enable thumbnail frame
    thframesize=2                   # size of thumbnail frame
    vgaframe="yes"                  # enable final image frame
    vgaframesize=3                  # size of final image frame
    hugeframe="no"                  # enable huge image frame
    hugeframesize=3                 # size of huge image frame
    th_quality=75                   # thumbnail percentage quality
    vga_quality=75                  # final image percentage quality
    huge_quality=75                 # huge image percentage quality
    back_link="http://www.meiahoradepois.com/fotos.htm"
                                    # link to go back
    backlink_label="&lt;&lt;&lt; &iacute;ndice"
                                    # back link label for album list site
    backlink_label_thumbs="&lt;&lt;&lt; miniaturas"
                                    # back link label for thumbnails page
    credits_str="photos by"         # credit information
    support_shalbum="yes"           # print link to shalbum site
    w3c_ok_banner="yes"             # print "W3C HTML 4.01 compliant" banner

    multi_html="yes"                # use one html page per picture?
    th_on_multi="yes"               # show thumbnail for next/last pics?
    long_description="yes"          # attach long description to pic page?
    slideshow_time="5"              # seconds per pic in slideshow mode zero=off
    order_by="name"                 # how to order the images

    # HTML layout
    color_text="#ffffff"
    color_bgcolor="#000000"
    color_link="#ffffff"
    color_vlink="#888888"
    color_alink="#ff0000"
    font_face="Arial, Helvetica"
fi;

quiet="no"                          # supress output
only_index="no"                     # only create HTML files
tmp_dir="_shalbum.tmp"              # directory for shalbum temporary files


# read user-defined options
if [ -e _options ]; then
    . _options
fi

# options chosen from command-line if specified
if [ "$cl_title" != "" ]; then
    title="$cl_title"
fi

if [ "$cl_date" != "" ]; then
    date="$cl_date"
fi

if [ "$cl_third" != "" ]; then
    third_title="$cl_third"
fi

if [ "$cl_author" != "" ]; then
    author="$cl_author"
fi

if [ "$cl_email" != "" ]; then
    e_mail="$cl_email"
fi

if [ "$cl_vga_res" != "" ]; then
    vga_res="$cl_vga_res"
fi

if [ "$cl_th_res" != "" ]; then
    th_res="$cl_th_res"
fi

if [ "$cl_huge_res" != "" ]; then
    huge_res="$cl_huge_res"
fi

if [ "$cl_table_width" != "" ]; then
    table_width="$cl_table_width"
fi

if [ "$cl_n_rows" != "" ]; then
    n_rows="$cl_n_rows"
fi

if [ "$cl_n_columns" != "" ]; then
    n_columns="$cl_n_columns"
fi

if [ "$cl_order_by" != "" ]; then
    order_by="$cl_order_by"
fi

if [ "$cl_slideshow_time" != "" ]; then
    slideshow_time="$cl_slideshow_time"
fi

if [ "$cl_quiet" != "" ]; then
    quiet="$cl_quiet"
fi

if [ "$cl_only_index" != "" ]; then
    only_index="$cl_only_index"
fi

# handle file names with white spaces and order by modify time
if [ "$order_by" = "name" ]; then
    LS_COMMAND="ls"
elif [ "$order_by" = "time" ]; then
    LS_COMMAND="ls -t -r"
fi

if [ "$LS_COMMAND" = "" ]; then
    LS_COMMAND="ls -t -r"
fi

###############
# Aux functions
###############

print_info()
{
    if [ "$quiet" != "yes" ]; then
	echo "$*"
    fi
}

printn_info()
{
    if [ "$quiet" != "yes" ]; then
	echo -n "$*"
    fi
}

printf_info()
{
    if [ "$quiet" != "yes" ]; then
	printf $*
    fi
}

print_err()
{
    echo $*
}

create_pages_index()
{
    echo '<!-- pages index begin -->' >> $1
    echo '<table width="'$table_width'"><tr><td align="center">' >> $1
    if [ $n_rows -gt 0 ]; then
	aux=1
	echo -n "<font size='2' face='${font_face}'><b>__LAST_PAGE__ " >> $1
	while [ $aux -le $idx_counter ]; do
	    last=$(($aux-1))
	    next=$(($aux+1))

	    echo -n '<a href="'"$idx_basename""$aux"".html"'">'"$aux"'</a> ' >> $1

	    if [ $aux -eq $idx_counter ]; then
		echo -n ' __NEXT_PAGE__' >> $1
	    else
		echo -n ' ' >> $1
	    fi

	    aux=$(($aux+1))
	done;
	echo '</b></font>' >> $1
    fi;

    if [ "$back_link" != "" ]; then
	echo "<p align='center'><a href=\"$back_link\"><font face='${font_face}' size='2'><b>$backlink_label</b></font></a></p>" >> $1
    fi;

    echo '</td></tr></table>' >> $1
    echo '<!-- pages index end -->' >> $1
}

add_credits_footer()
{
    if  [ "$author" != "" ] ||
	[ "$support_shalbum" = "yes" ] ||
	[ "$w3c_ok_banner" = "yes" ]; then
	
	echo "<!-- credits begin -->" >> $1
	echo '<table width="'$table_width'"><tr>' >> $1

	echo '<td width="50%" align="left" valign="top">' >> $1
        # support shalbum!
	if [ "$support_shalbum" = "yes" ]; then
	    echo "<p><font size='1' face='${font_face}'><b>page created with <a href='http://sourceforge.net/projects/shalbum' target='shalbum'><u>shalbum</u></a></b></font></p>" >> $1
	fi
	
        # W3C HTML 4.01 compliant banner
	if [ "$w3c_ok_banner" = "yes" ]; then
	    echo '<p><a href="http://validator.w3.org/check?uri=referer"><img border="0" src="http://www.w3.org/Icons/valid-html401" alt="Valid HTML 4.01 Transitional" height="31" width="88"></a></p>' >> $1
	fi
	echo "</td>" >> $1
	
	echo '<td width="50%" align="right" valign="top">' >> $1
        # Author
	if [ "$author" != "" ]; then
	    echo "<p><font size='1' face='${font_face}'><b>$credits_str $author</b></font><br />" >> $1
	    echo "<a href='mailto:$e_mail'><font size='1' face='${font_face}'><b>$e_mail</b></font></a></p>" >> $1
	fi
	
	echo '</tr></table>' >> $1
	echo "<!-- credits end -->" >> $1
    fi
}

create_page_for_pic()
{
    pic="$1"
    before="$2"
    after="$3"
    pic_subtitle="$4"
    index_page="$5"
    refresh="$6"

    if [ "${refresh}" != "" ]; then
	html_file=${pic}"_r.html"
    else
	html_file=${pic}".html"
    fi

    echo '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">' > $html_file
    echo "<html>" >> $html_file

    # <head>
    echo "<!-- head -->" >> $html_file
    echo "<head>" >> $html_file

    # slideshow
    if [ "${refresh}" != "" ]; then
	if [ "$after" != "[NONE]" ]; then
	    html_compliant_filename "${after}_r.html"
	    echo "<meta http-equiv='refresh' content='${refresh};url=${html_compliant_filename}'>" >> $html_file
	fi
    fi

    echo "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">" >> $html_file
    echo "<style TYPE=\"text/css\"> A:link, A:visited { text-decoration: none; } </style>" >> $html_file
    echo "<title>$pic</title>" >> $html_file
    echo "</head>" >> $html_file
    # </head>

    # <body>
    echo "<!-- body -->" >> $html_file
    echo "<body text='$color_text' bgcolor='$color_bgcolor' link='$color_link' vlink='$color_vlink' alink='$color_alink'><center>" >> $html_file

    # reference to index
    echo "<table border='0' width='$table_width'><tr><td width='33%'>" >> $html_file
    if [ "$index_page" = "1" ]; then
	echo "<a href='index.html'><b><font face='${font_face}' size='2'>${backlink_label_thumbs}</font></b></a>" >> $html_file
    else
	echo "<a href='index${index_page}.html'><b><font face='${font_face}' size='2'>${backlink_label_thumbs}</font></b></a>" >> $html_file
    fi

    # left top arrow
    echo "</td><td width='34%'>&nbsp;</td><td width='33%'>&nbsp;</td></tr><tr>" >> $html_file
    if [ "$before" != "[NONE]" ]; then
	before_th="thumbnails/th_""${before}"
	html_compliant_filename "${before}.html"
	echo "<td align='left' width='33%'><a href='${html_compliant_filename}'><font face='${font_face}'>&lt;&lt;</font></a></td>" >> $html_file
    else
	echo "<td align='left'></td>" >> $html_file
    fi

    # slideshow
    echo "<td align='center' width='34%'>" >> $html_file
    if [ "$after" != "[NONE]" ]; then
	if [ "${refresh}" != "" ]; then
	    html_compliant_filename "${pic}.html"
	    echo "<a href='${html_compliant_filename}'><font face='${font_face}' size='1'>STOP<font color='red' size='1'><b> X</b></font></font></a>" >> $html_file
	else
	    if [ "${slideshow_time}" != "0" ]; then
		html_compliant_filename "${pic}_r.html"
		echo "<a href='${html_compliant_filename}'><font face='${font_face}' size='1'>PLAY<font color='green' size='3'><b> &gt;</b></font></font></a>" >> $html_file
	    fi
	fi
    fi
    echo "</td>" >> $html_file

    # right top arrow
    if [ "$after" != "[NONE]" ]; then
	after_th="thumbnails/th_""${after}"
	html_compliant_filename "${after}.html"
	echo "<td align='right' width='10%'><a href='${html_compliant_filename}'><font face='${font_face}'>&gt;&gt;</font></a></td>" >> $html_file
    else
	echo "<td align='right'></td>" >> $html_file
    fi

    echo "</tr></table>" >> $html_file

    # pic
    echo "<table border='0' width='$table_width'><tr><td valign='middle' width='$vga_res' align='center'>" >> $html_file

    # link to huge image
    if [ "$huge_res" != "0" ]; then
	html_compliant_filename "huge/huge_${pic}"
	echo "<a href='huge/huge_${pic}'>" >> $html_file
    fi

    html_compliant_filename "vga/vga_${pic}"
    echo "<img src='${html_compliant_filename}' border='0' alt='' />" >> $html_file

    if [ "$huge_res" != "0" ]; then
	echo "</a>" >> $html_file
    fi

    echo "</td></tr>" >> $html_file
    echo "</table>" >> $html_file

    # bottom arrows and pic subtitle
    echo "<table border='0' width='$table_width'><tr>" >> $html_file
    if [ "$before" != "[NONE]" ]; then
	before_th="thumbnails/th_""${before}"
	html_compliant_filename "${before}.html"
	echo "<td align='left' width='10%'><a href='${html_compliant_filename}'><font face='${font_face}'>&lt;&lt;</font></a></td>" >> $html_file
    else
	echo "<td align='left'></td>" >> $html_file
    fi
    echo "<td align='center' width='80%'><font face='${font_face}'><b>$pic_subtitle</b></font></td>" >> $html_file
    if [ "$after" != "[NONE]" ]; then
	after_th="thumbnails/th_""${after}"
	html_compliant_filename "${after}.html"
	echo "<td align='right' width='10%'><a href='${html_compliant_filename}'><font face='${font_face}'>&gt;&gt;</font></a></td>" >> $html_file
    else
	echo "<td align='right'></td>" >> $html_file
    fi
    echo "</tr></table>" >> $html_file

    # long description if appropriate
    if [ "$long_description" = "yes" ]; then
        long_description_file="$1""-description.html"
	if [ -e $long_description_file ]; then
	    echo "<table border='0' width='$table_width'><tr><td>" >> $html_file
	    cat $long_description_file >> $html_file
	    echo "</td></tr></table>" >> $html_file
	fi
    fi

    # thumbnails with links
    if [ "$th_on_multi" = yes ]; then
	echo "<table border='0' width='$table_width'><tr>" >> $html_file
        # before
	echo "<td align='left' valign='top' width='$th_res'>" >> $html_file
	if [ "$before" != "[NONE]" ]; then
	    html_compliant_filename "${before}.html"
	    echo "<a href='${html_compliant_filename}'>" >> $html_file
	    html_compliant_filename "${before_th}"
	    echo "<img border='0' src='${html_compliant_filename}' alt='' />" >> $html_file
	    echo "</a>" >> $html_file
	fi;
	echo "</td>" >> $html_file
	
	echo "<td align='center' valign='top' width='$(($table_width-(2*$th_res)))'></td>" >> $html_file
	
        # after
	echo "<td align='right' valign='top' width='$th_res'>" >> $html_file
	if [ "$after" != "[NONE]" ]; then
	    html_compliant_filename "${after}.html"
	    echo "<a href='${html_compliant_filename}'>" >> $html_file
	    html_compliant_filename "${after_th}"
	    echo "<img border='0' src='${html_compliant_filename}' alt='' />" >> $html_file
	    echo "</a>" >> $html_file
	fi;
	echo "</td>" >> $html_file
	
	echo "</tr></table>" >> $html_file
    fi

    echo "<br />" >> $html_file

    add_credits_footer $html_file

    echo "</center></body></html>" >> $html_file
    echo '<!-- created with '$software_revision' -->' >> $html_file
}

html_compliant_filename()
{
    # input:  a file name
    # output: ${html_compliant_filename}, this filename with some
    #         chars replaced by "%XX" for HTML compliancy

    html_compliant_filename="$1"

    # '%'
    html_compliant_filename=`echo $html_compliant_filename | sed -e s/'%'/'%25'/g`

    # '?'
    html_compliant_filename=`echo $html_compliant_filename | sed -e s/'?'/'%3f'/g`
}

#########################
# Part 0: Look for images
#########################

images=""
image_types=""

# JPG
if [ "`ls *.[Jj][Pp][Gg] 2>/dev/null`" != "" ]; then
    images=$images' *.[Jj][Pp][Gg]'
    image_types=$image_types' jpg'
fi

# GIF
if [ "`ls *.[Gg][Ii][Ff] 2>/dev/null`" != "" ]; then
    images=$images' *.[Gg][Ii][Ff]'
    image_types=$image_types' gif'
fi

# PNG
if [ "`ls *.[Pp][Nn][Gg] 2>/dev/null`" != "" ]; then
    images=$images' *.[Pp][Nn][Gg]'
    image_types=$image_types' png'
fi

# BMP
if [ "`ls *.[Bb][Mm][Pp] 2>/dev/null`" != "" ]; then
    images=$images' *.[Bb][Mm][Pp]'
    image_types=$image_types' bmp'
fi

# TIFF
if [ "`ls *.[Tt][Ii][Ff][Ff] 2>/dev/null`" != "" ]; then
    images=$images' *.[Tt][Ii][Ff][Ff]'
    image_types=$image_types' tiff'
fi

if [ "$images" = "" ]; then
    print_err "No pictures in `pwd`"
    exit 2
fi

total_files="`ls $images | wc -l`"

print_info "Creating album"
print_info "  title:    \"$title\""
print_info "  subtitle: \"$date\""
print_info "  third:    \"$third_title\""
print_info "  author:   \"$author\""
print_info "  e-mail:   \"$e_mail\""
if [ -e _options ]; then
    print_info "  _options: found, reading custom options"
else
    print_info "  _options: not found, using default options"
fi
print_info "  mhd:      $mhd"
print_info "  images:   $(($total_files))"
print_info "  type(s): $image_types"

all_files="`$LS_COMMAND $images`"
IFS='\
'

#############################
# Part I: process image files
#############################

# delete previous temporary files
if [ -e ${tmp_dir} ]; then
    rm -rf ${tmp_dir}
fi
mkdir ${tmp_dir}

if [ "$only_index" != "yes" ]; then
    mkdir ${tmp_dir}/thumbnails
    mkdir ${tmp_dir}/vga

    if [ "$huge_res" != "0" ]; then
	mkdir ${tmp_dir}/huge
    fi
    
    # generate watermarks
    if [ $watermark = "yes" ]; then
	printn_info "Creating watermarks: "
	# temporary resized watermarks
	watermark_th="${tmp_dir}/watermark_${th_res}.png"
	watermark_vga="${tmp_dir}/watermark_${vga_res}.png"

	if [ "$huge_res" != "0" ] && [ "$huge_res" != "copy" ]; then
	    watermark_huge="${tmp_dir}/watermark_${huge_res}.png"
	fi
	
	# thumbnail watermark
	printn_info "[tn""${th_res}]"
	convert -sharpen 3 -size ${th_res}x${th_res} $watermark_th_src -resize ${th_res}x${th_res} +profile "*" $watermark_th
	
	# vga watermark
	printn_info "[pic""${vga_res}]"
	convert -sharpen 3 -size ${vga_res}x${vga_res} $watermark_vga_src -resize ${vga_res}x${vga_res} +profile "*" $watermark_vga

	# huge watermark (same as vga)
	if [ "$huge_res" != "0" ] && [ "$huge_res" != "copy" ]; then
	    printn_info "[huge""${huge_res}]"
	    convert -sharpen 3 -size ${huge_res}x${huge_res} $watermark_vga_src -resize ${huge_res}x${huge_res} +profile "*" $watermark_huge
	fi
	    
	print_info " ok!"
    fi; # $watermark = yes
    
    print_info "Creating pictures: "
    processed=0
    for file in $all_files; do
	processed=$(($processed+1))
	processed100=$(($processed*100))
	percent=$(($processed100/$total_files))
	
	printf_info "%4d/%4d [%3.0f%%] %s: " "$processed" "$total_files" "$percent" "$file"

	# thumbnail
	printn_info "[tn""${th_res}]"
	th_file="th_""$file"

	convert "$file" -resize ${th_res}x${th_res} ${tmp_dir}/thumbnails/"$th_file"

	if [ $watermark = "yes" ]; then
	    printn_info "[wmark]"
	    composite -gravity SouthEast $watermark_th ${tmp_dir}/thumbnails/"$th_file" ${tmp_dir}/thumbnails/"$th_file"
	fi;

	if [ $thframe = "yes" ]; then
	    montage ${tmp_dir}/thumbnails/"$th_file" -mode concatenate -frame $thframesize -strip -quality ${th_quality} ${tmp_dir}/thumbnails/"$th_file"
	else
	    convert ${tmp_dir}/thumbnails/"$th_file" -strip -quality ${th_quality} ${tmp_dir}/thumbnails/"$th_file"
	fi;

	# vga
	printn_info "[pic""${vga_res}]"
	vga_file="vga_""$file"
	
	convert "$file" -resize ${vga_res}x${vga_res} ${tmp_dir}/vga/"$vga_file"
	
	if [ $watermark = "yes" ]; then
	    printn_info "[wmark]"
	    composite -dissolve ${watermark_dissolve} -gravity SouthEast $watermark_vga ${tmp_dir}/vga/"$vga_file" ${tmp_dir}/vga/"$vga_file"
	fi;

	if [ $vgaframe = "yes" ]; then
	    montage ${tmp_dir}/vga/"$vga_file" -mode concatenate -frame $vgaframesize -strip -quality ${vga_quality} ${tmp_dir}/vga/"$vga_file"
	else
	    convert ${tmp_dir}/vga/"$vga_file" -strip -quality ${vga_quality} ${tmp_dir}/vga/"$vga_file"
	fi;
	
	# huge
	if [ "$huge_res" != 0 ]; then
	    huge_file="huge_""$file"
	    if [ "$huge_res" != "copy" ]; then
		printn_info "[huge""${huge_res}]"
	    
		convert "$file" -resize ${huge_res}x${huge_res} ${tmp_dir}/huge/"$huge_file"

		if [ $watermark = "yes" ]; then
		    printn_info "[wmark]"
		    composite -dissolve ${watermark_dissolve} -gravity SouthEast $watermark_huge ${tmp_dir}/huge/"$huge_file" ${tmp_dir}/huge/"$huge_file"
		fi;

		if [ $hugeframe = "yes" ]; then
		    montage ${tmp_dir}/huge/"$huge_file" -mode concatenate -frame $hugeframesize -strip -quality ${huge_quality} ${tmp_dir}/huge/"$huge_file"
		else
		    convert ${tmp_dir}/huge/"$huge_file" -strip -quality ${huge_quality} ${tmp_dir}/huge/"$huge_file"
		fi;
	    else
		printn_info "[hugecp]"
		cp "$file" ${tmp_dir}/huge/"$huge_file"
	    fi
	fi

	print_info " ok!"
    done;
    
    if [ $watermark = "yes" ]; then
	rm $watermark_vga $watermark_th $watermark_huge
    fi;
fi; # !only_index

##########################
# Part II: the index files
##########################

printn_info "Generating indexes..."

idx_basename='index'
idx_counter=1
idx_filename="$idx_basename""$idx_counter"".html"

############################## CONTENTS ##############################
echo '<table width="'$table_width'">' >> $idx_filename

col_counter=1
lin_counter=1

if [ $multi_html = "yes" ]; then
    cur_counter=1
    b4_file="[NONE]"
fi;

col_percentage=$((100/$n_columns))

for file in $all_files; do

    # rows & columns
    if [ $col_counter -eq 1 ]; then
	echo "<!-- row begins -->" >> $idx_filename
	echo "<tr><td width='${col_percentage}%' align='left' valign='top'>" >> $idx_filename
    elif [ $col_counter -eq $n_columns ]; then
	echo "<td width='${col_percentage}%' align='right' valign='top'>" >> $idx_filename
    else
	echo "<td width='${col_percentage}%' align='center' valign='top'>" >> $idx_filename
    fi;

    th_file="thumbnails/th_""$file"
    vga_file="vga/vga_""$file"

    if [ $multi_html = "yes" ]; then
	html_compliant_filename "${file}.html"
	echo "<table><tr><td width='${th_res}'><a href='${html_compliant_filename}'>" >> $idx_filename
	html_compliant_filename "${th_file}"
	echo '<img border="0" src="'${html_compliant_filename}'" alt="'${file}'" /></a>' >> $idx_filename
    else
	html_compliant_filename "${vga_file}"
	echo "<table><tr><td width='${th_res}'><a href='${html_compliant_filename}' target='${file}'><img border='0' " >> $idx_filename
	html_compliant_filename "${th_file}"
	echo 'src="'${html_compliant_filename}'" alt="'${file}'" /></a>' >> $idx_filename
    fi
    
    if [ "$pic_label_type" != "none" ]; then
        if [ "$pic_label_type" = "number" ]; then
            # try to guess pic number
            # following IMG_####.JPG or DSC#####.JPG (Sony) pattern
	    if [ "`echo $file | grep _`" = "$file" ]; then
		num_sep="_"
	    elif [ "`echo $file | grep c`" = "$file" ]; then
		num_sep="c"
	    else
		num_sep="C"
	    fi
	    number=`echo $file | cut -d "." -f 1 | cut -d "$num_sep" -f 2`
	    pic_subtitle=$number
	elif [ "$pic_label_type" = "filename" ]; then
	    pic_subtitle=$file
	elif [ "$pic_label_type" = "conf" ]; then
	    if [ -e _subtitles ]; then
		pic_subtitle="`grep \"${file}=\" _subtitles | cut -d '=' -f 2`"
	    fi
	fi;

	echo "</td></tr><tr><td width='${th_res}'><font face='${font_face}' size='2'><b>$pic_subtitle</b></font>" >> $idx_filename
    fi

    echo '</td></tr></table></td>' >> $idx_filename

    # multi-pages
    if [ $multi_html = "yes" ]; then
        # finds next file!
	if [ "$total_files" -gt "$cur_counter" ]; then
	    next_counter=0
	    for f_find in $all_files; do
		next_file=$f_find
		if [ "$next_counter" = "$cur_counter" ]; then
		    break
		fi;
		next_counter=$(($next_counter+1))
	    done
	else
	    next_file="[NONE]"
	fi

	# finds out index page
	index_page=$(((($cur_counter-1)/($n_rows*$n_columns))+1))

	create_page_for_pic "$file" "$b4_file" "$next_file" "$pic_subtitle" "$index_page"

	if [ "slideshow_time" != "0" ]; then
	    create_page_for_pic "$file" "$b4_file" "$next_file" "$pic_subtitle" "$index_page" "$slideshow_time"
	fi
    fi

    col_counter=$(($col_counter + 1))

    if [ $col_counter -gt $n_columns ]; then
	echo '</tr>' >> $idx_filename
	col_counter=1
	lin_counter=$(($lin_counter+1))
    fi;

    if [ $n_rows -gt 0 ]; then
	if [ $lin_counter -gt $n_rows ]; then
	    # this 'if' avoids creation of an empty index.html in the end
	    if [ ! $(($n_rows*$n_columns*$idx_counter)) -eq $total_files ]; then
		idx_counter=$(($idx_counter+1))
		idx_filename="$idx_basename""$idx_counter"".html"
		
		echo '<table width="'$table_width'"><tr>' >> $idx_filename
		lin_counter=1
	    fi;
	fi;
    fi;

    if [ $multi_html = "yes" ]; then
	b4_file="$file"
	cur_counter=$(($cur_counter+1))
    fi;
done;

# Fill empty columns
while [ $col_counter -gt 1 ]; do
    echo "<td width='${col_percentage}%'></td>" >> $idx_filename

    col_counter=$(($col_counter+1))

    if [ $col_counter -gt $n_columns ]; then
	col_counter=1
    fi;
done;
############################## /CONTENTS ##############################

############################## HEADER ##############################
idx_header="header.html"

echo '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">' > $idx_header
echo "<html>" >> $idx_header

# <head>
echo "<!-- head -->" >> $idx_header
echo "<head>" >> $idx_header

# meta
echo "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">" >> $idx_header

# style
echo '<style TYPE="text/css"> A:link, A:visited { text-decoration: none; } </style>' >> $idx_header

# echo title
echo -n "<title>" >> $idx_header
if [ "$third_title" != "" ]; then
    echo -n "${third_title} - " >> $idx_header
fi;
echo -n "$title" >> $idx_header
if [ "$date" != "" ]; then
    echo -n " - $date" >> $idx_header
fi;
echo -n '</title>' >> $idx_header

echo >> $idx_header
echo "</head>" >> $idx_header
# </head>

# <body>
echo "<!-- body -->" >> $idx_header
echo "<body text='$color_text' bgcolor='$color_bgcolor' link='$color_link' vlink='$color_vlink' alink='$color_alink'><center>" >> $idx_header

# body title
echo "<!-- body title -->" >> $idx_header
echo '<table width="'$table_width'"><tr><td>' >> $idx_header
if [ "$third_title" != "" ]; then
    echo "<font face='${font_face}' size='3'><b>${third_title}</b></font><br />" >> $idx_header
fi;
echo "<font face='${font_face}' size='5'><b>$title</b></font>" >> $idx_header
if [ "$date" != "" ]; then
    echo "<br /><font face='${font_face}' size='3'>$date</font>" >> $idx_header
fi
echo '</td></tr></table>' >> $idx_header

# page index
create_pages_index $idx_header
############################## /HEADER ##############################

############################## FOOTER ##############################
idx_footer="footer.html"

echo '</table><br />' >> $idx_footer

# page index
create_pages_index $idx_footer

# credits footer
add_credits_footer $idx_footer

echo '</center></body></html>' >> $idx_footer
echo '<!-- created with '$software_revision' -->' >> $idx_footer
############################## /FOOTER ##############################

################################### CREATION #################################
aux=1
while [ $aux -le $idx_counter ]; do
    idx_filename="$idx_basename""$aux"".html"

    cat $idx_header $idx_filename $idx_footer > tmp.html
    mv tmp.html $idx_filename

    if [ $idx_filename = "index1.html" ]; then
	mv $idx_filename "$idx_basename".html
	idx_filename="$idx_basename".html
    fi

    next=$(($aux+1))
    last=$(($aux-1))

    neighbors=0
    # last page
    if [ $aux -eq 1 ]; then
	cat $idx_filename | sed s/"__LAST_PAGE__"/""/g > tmp_idx.html
    else
	neighbors=$(($neighbors+1))
	cat $idx_filename | sed s/"__LAST_PAGE__"/'<a href="'"$idx_basename""$last"".html"'"><font size="1"><b>\&lt;\&lt;<\/b><\/font><\/a> '/g > tmp_idx.html
    fi
    mv tmp_idx.html $idx_filename

    # next page
    if [ $aux -eq $idx_counter ]; then
	cat $idx_filename | sed s/"__NEXT_PAGE__"/""/g > tmp_idx.html
    else
	neighbors=$(($neighbors+1))
	cat $idx_filename | sed s/"__NEXT_PAGE__"/' <a href="'"$idx_basename""$next"".html"'"><font size="1"><b>\&gt;\&gt;<\/b><\/font><\/a>'/g > tmp_idx.html
    fi
    mv tmp_idx.html $idx_filename

    # index1.html
    cat $idx_filename | sed s/"index1.html"/"index.html"/g > tmp_idx.html
    mv tmp_idx.html $idx_filename

    # link to current file
    cat $idx_filename | sed s/'<a href="'"$idx_filename"'">'"$aux"'<\/a>'/'<font color="red">'"$aux"'<\/font>'/g > tmp_idx.html
    mv tmp_idx.html $idx_filename

    aux=$(($aux+1))
done;
rm $idx_header $idx_footer

# if there's only one index file, remove page number.
if [ $neighbors -eq 0 ]; then
    cat $idx_filename | sed s/'<font color="red">1<\/font>'/""/g > tmp_idx.html
    mv tmp_idx.html $idx_filename
fi;
################################### /CREATION #################################

print_info " ok!"

##################
# Part III: export
##################

printn_info "Exporting: "

if [ "$only_index" != yes ]; then

    # remove previous backup and backup existing album
    if [ -e album.bak ]; then
	rm -rf album.bak
    fi

    if [ -e album ]; then
	mv album album.bak
    fi;
    mkdir album

    printn_info "[tnails]"
    mv ${tmp_dir}/thumbnails album
    printn_info "[pics]"
    mv ${tmp_dir}/vga album
    if [ "$huge_res" != "0" ]; then
	printn_info "[huge]"
	mv ${tmp_dir}/huge album
    fi

fi; # !only_index

# cleanup
if [ -e ${tmp_dir} ]; then
    rm -rf ${tmp_dir}
fi;

printn_info "[idx]"
mkdir -p album
rm "album/""$idx_basename"*.html 2>/dev/null
mv "$idx_basename"*.html album

if [ $multi_html = "yes" ]; then
    printn_info '[multi-idx]'
    for file in $all_files; do
	mv "${file}.html" album
	if [ "${slideshow_time}" != "0" ]; then
	    mv "${file}_r.html" album
	fi
    done
fi

print_info " ok!"

exit 0
