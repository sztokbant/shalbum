#!/bin/sh

#  Copyright 2003 Eduardo Sztokbant <du@du.eti.br>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

##########
# shalbum - http://sourceforge.net/projects/shalbum
#
# Bourne shell script to create an HTML album from the image files in
# current directory.
# Customization can be achieved by editing the "Options" session in
# this file.
# Requires ImageMagick.
#
# Usage (from pics dir):
#  $ shalbum "Album Title" "Sub-title/Date" mhd
# or:
#  $ echo "Album Title" > _title
#  $ echo "Date" > _date
#  $ touch _mhd
#  $ shalbum
#
# To regenerate only the index files:
#  $ shalbum index
#
# 'mhd' is optional. Use it to choose 'mhd' options.
#
##############################################################

software_revision="by shalbum - http://sourceforge.net/projects/shalbum - last revision 2005 June 27"

###############
# Aux functions
###############

create_pages_index()
{
    echo '<!-- pages index begin -->' >> $1
    echo '<table width="'$table_width'"><tr><td align="right">' >> $1
    if [ $n_rows -gt 0 ]; then
	aux=1
	echo -n '<font size="2"><b><center>__LAST_PAGE__ ' >> $1
	while [ $aux -le $idx_counter ]; do
	    last=$(($aux-1))
	    next=$(($aux+1))

	    echo -n '<a href="'"$idx_basename""$aux"".html"'">'"$aux"'</a> ' >> $1

	    if [ $aux -eq $idx_counter ]; then
		echo -n ' __NEXT_PAGE__' >> $1
	    else
		echo -n ' ' >> $1
	    fi

	    aux=$(($aux+1))
	done;
	echo '</center>' >> $1
    fi;


    if [ "$back_link" != "" ]; then
	echo "<center><a href=\"$back_link\">$backlink_label</a></center><br>" >> $1
    fi;

    if [ "$mhd" = "yes" ]; then
	echo '</b></font>' >> $1
    fi;

    echo '</b></font><br>' >> $1
    echo '<!-- pages index end -->' >> $1
}

#################
# Look for images
#################

images=""

echo -n "[ "

# JPG
if [ "`ls *.[Jj][Pp][Gg] 2>/dev/null`" != "" ]; then
    images=$images' *.[Jj][Pp][Gg]'
    echo -n "jpg "
fi

# GIF
if [ "`ls *.[Gg][Ii][Ff] 2>/dev/null`" != "" ]; then
    images=$images' *.[Gg][Ii][Ff]'
    echo -n "gif "
fi

# PNG
if [ "`ls *.[Pp][Nn][Gg] 2>/dev/null`" != "" ]; then
    images=$images' *.[Pp][Nn][Gg]'
    echo -n "png "
fi

# BMP
if [ "`ls *.[Bb][Mm][Pp] 2>/dev/null`" != "" ]; then
    images=$images' *.[Bb][Mm][Pp]'
    echo -n "bmp "
fi

# TIFF
if [ "`ls *.[Tt][Ii][Ff][Ff] 2>/dev/null`" != "" ]; then
    images=$images' *.[Tt][Ii][Ff][Ff]'
    echo -n "tiff "
fi

echo "]"

if [ "$images" = "" ]; then
    echo "No pictures in `pwd`"
    exit
fi;

total_files="`ls $images | wc -l`"

# handle file names with white spaces and order by modify time
all_files="`ls -t -r $images`"
IFS='\
'

#######
# Input
#######

if [ $# -le 1 ]; then
    if [ -e _title ]; then
	title="`cat _title`"
    else
	title="Album"
    fi;

    if [ -e _date ]; then
	date="`cat _date`"
    else
	date=""
    fi;

    if [ -e _mhd ]; then
	mhd="yes"
    else
	mhd="no"
    fi;

    if [ "$1" = "index" ]; then
    	only_index="yes"
    else
    	only_index="no"
    fi
else
    title="$1"
    date="$2"

    if [ "$3" = "mhd" ]; then
	mhd="yes"
    else
	mhd="no"
    fi;
fi;

echo "Creating album"
echo "  title:    \"$title\""
echo "  subtitle: \"$date\""
echo "  mhd:      $mhd"

#########
# Options
#########

if [ $mhd = "yes" ]; then
    # mhd options
    vga_res=500                     # max width/heigth of final image
    th_res=150                      # max width/height of thumbnail
    table_width=520                 # number of HTML table columns
    n_rows=16                       # number of table rows
    n_columns=3                     # number of table columns
    print_number=yes                # boolean to print number found in filename
    print_filename=no               # boolean to print filename under thumbnail
    author="Meia Hora Depois"       # site author's name
    e_mail='banda@meiahoradepois.com'
                                    # site author's e-mail
    author2=""                      # site #2 author (blank for none)
    e_mail2=""                      # site #2 author's e-mail
    watermark="yes"                 # boolean to stamp watermarks
    watermark_th_src="$HOME/.shalbum/watermark_th.png"
                                    # source for thumbnail watermark
    watermark_vga_src="$HOME/.shalbum/watermark_vga.png"
                                    # source for final image watermark
    watermark_th="./watermark_${th_res}.png"
                                    # name of temporary resized thumbnail file
    watermark_vga="./watermark_${vga_res}.png"
                                    # name of temporary resized image file
    thframe="no"                    # enable thumbnail frame
    thframesize=2                   # size of thumbnail frame
    vgaframe="no"                   # enable final image frame
    vgaframesize=3                  # size of final image frame
    th_quality=60                   # thumbnail percentage quality
    vga_quality=60                  # final image percentage quality
    back_link="http://denisgv.sites.uol.com.br/fotos.htm"
                                    # link to go back
    backlink_label="&iacute;ndice"  # back link label
    credits_str="photos by"         # credit information
    support_shalbum="yes"           # print link to shalbum site

    # HTML body colors
    color_text="#ffffff"
    color_bgcolor="#000000"
    color_link="#ffffff"
    color_vlink="#888888"
    color_alink="#ff0000"
else
    # default options
    vga_res=800                     # max width/heigth of final image
    th_res=250                      # max width/height of thumbnail
    table_width=780                 # number of HTML table columns
    n_rows=10                       # number of table rows
    n_columns=3                     # number of table columns
    print_number=no                 # boolean to print number found in filename
    print_filename=no               # boolean to print filename under thumbnail
    author="Eduardo Sztokbant"      # site author's name
    e_mail='du@du.eti.br'           # site author's e-mail
    author2=""                      # site #2 author (blank for none)
    e_mail2=""                      # site #2 author's e-mail
    watermark="no"                  # boolean to stamp watermarks
    watermark_th_src=""             # source for thumbnail watermark
    watermark_vga_src=""            # source for final image watermark
    watermark_th=""                 # name of temporary resized thumbnail file
    watermark_vga=""                # name of temporary resized image file
    thframe="no"                    # enable thumbnail frame
    thframesize=2                   # size of thumbnail frame
    vgaframe="no"                   # enable final image frame
    vgaframesize=3                  # size of final image frame
    th_quality=75                   # thumbnail percentage quality
    vga_quality=75                  # final image percentage quality
    back_link=""                    # link to go back
    backlink_label=""               # back link label
    credits_str=""                  # credit information
    support_shalbum="yes"           # print link to shalbum site

    # HTML body colors
    color_text="#ffffff"
    color_bgcolor="#000000"
    color_link="#ffffff"
    color_vlink="#888888"
    color_alink="#ff0000"
fi;

#############################
# Part I: process image files
#############################

if [ "$only_index" != "yes" ]; then
    if [ -e thumbnails ]; then
	rm -rf thumbnails
    fi;
    mkdir thumbnails
    
    if [ -e vga ]; then
	rm -rf vga
    fi;
    mkdir vga
    
    # generate watermarks
    if [ $watermark = "yes" ]; then
	echo -n "Creating watermarks..."
	
	echo -n "tnail $th_res..."
	convert -sharpen 3 -size ${th_res}x${th_res} $watermark_th_src -resize ${th_res}x${th_res} +profile "*" $watermark_th
	
	echo -n "vga $vga_res..."
	convert -sharpen 3 -size ${vga_res}x${vga_res} $watermark_vga_src -resize ${vga_res}x${vga_res} +profile "*" $watermark_vga
	
	echo "done!"
    fi; # $watermark = yes
    
    processed=0
    
    for file in $all_files; do
	processed=$(($processed+1))
	processed100=$(($processed*100))
	percent=$(($processed100/$total_files))
	
	printf "%4d/%4d (%3.0f%%) %s: " "$processed" "$total_files" "$percent" "$file"
	echo -n "tnail $th_res..."
	th_file="th_""$file"
	convert -size ${th_res}x${th_res} -quality ${th_quality} "$file" -strip -resize ${th_res}x${th_res} +profile "*" thumbnails/"$th_file"
	
	if [ $watermark = "yes" ]; then
	    echo -n "watermark..."
	    composite -gravity SouthEast $watermark_th thumbnails/"$th_file" thumbnails/"$th_file"
	fi;

	if [ $thframe = "yes" ]; then
	    montage thumbnails/"$th_file" -mode concatenate -frame $thframesize thumbnails/"$th_file"
	fi;

	echo -n "pic $vga_res..."
	vga_file="vga_""$file"
	
	convert -size ${vga_res}x${vga_res} -quality ${vga_quality} "$file" -sharpen 2 -strip -resize ${vga_res}x${vga_res} +profile "*" vga/"$vga_file"
	
	if [ $watermark = "yes" ]; then
	    echo -n "watermark..."
	    composite -dissolve 60 -gravity SouthEast $watermark_vga vga/"$vga_file" vga/"$vga_file"
	fi;

	if [ $vgaframe = "yes" ]; then
	    montage vga/"$vga_file" -mode concatenate -frame $vgaframesize vga/"$vga_file"
	fi;
	
	echo "done!"
    done;
    
    if [ $watermark = "yes" ]; then
	rm $watermark_vga $watermark_th
    fi;
fi; # !only_index

##########################
# Part II: the index files
##########################

echo -n "Generating indexes..."

idx_basename='index'
idx_counter=1
idx_filename="$idx_basename""$idx_counter"".html"

############################## CONTENTS ##############################
echo '<table width="'$table_width'"><tr>' >> $idx_filename

col_counter=1
lin_counter=1

col_percentage=$((100/$n_columns))

for file in $all_files; do
    th_file="thumbnails/th_""$file"
    vga_file="vga/vga_""$file"
    
    # rows & columns
    if [ $col_counter -eq 1 ]; then
	echo "<!-- row begins -->" >> $idx_filename
	echo "<td width='${col_percentage}%' align='left' valign='top'>" >> $idx_filename
    elif [ $col_counter -eq $n_columns ]; then
	echo "<td width='${col_percentage}%' align='right' valign='top'>" >> $idx_filename
    else
	echo "<td width='${col_percentage}%' align='center' valign='top'>" >> $idx_filename
    fi;

    echo '<table><tr><td><a href="'$vga_file'" target="'$file'"><img border="0" src="'$th_file'" alt="'$file'"></a><br>' >> $idx_filename

    # number
    # try to guess picture number following IMG_####.JPG or DSC#####.JPG (Sony camera) format
    if [ "$print_number" = "yes" ]; then
	if [ "`echo $file | grep _`" = "$file" ]; then
		num_sep="_"
	elif [ "`echo $file | grep c`" = "$file" ]; then
		num_sep="c"
	else
		num_sep="C"
	fi
	number=`echo $file | cut -d "." -f 1 | cut -d "$num_sep" -f 2`
	echo $number >> $idx_filename
    elif [ "$print_filename" = "yes" ]; then
    	echo $file >> $idx_filename
    fi;

    echo '</td></tr></table></td>' >> $idx_filename

    col_counter=$(($col_counter + 1))

    if [ $col_counter -gt $n_columns ]; then
	echo '</tr><tr>' >> $idx_filename
	col_counter=1
	lin_counter=$(($lin_counter+1))
    fi;

    if [ $n_rows -gt 0 ]; then
	if [ $lin_counter -gt $n_rows ]; then
	    idx_counter=$(($idx_counter+1))
	    idx_filename="$idx_basename""$idx_counter"".html"

	    echo '<table width="'$table_width'"><tr>' >> $idx_filename
	    lin_counter=1
	fi;
    fi;
done;

# Fill empty columns

while [ $col_counter -gt 1 ]; do
    echo "<td width='${col_percentage}%'></td>" >> $idx_filename

    col_counter=$(($col_counter+1))

    if [ $col_counter -gt $n_columns ]; then
	col_counter=1
    fi;

done;
############################## /CONTENTS ##############################

############################## HEADER ##############################
idx_header="header.html"

echo "<html>" > $idx_header
echo >> $idx_header
echo -n "<head><title>" >> $idx_header

if [ $mhd = "yes" ]; then
    echo -n "Meia Hora Depois - " >> $idx_header
fi;

# echoes title
echo -n "$title" >> $idx_header
if [ "$date" != "" ]; then
    echo -n "- $date" >> $idx_header
fi;

echo '</title><style TYPE="text/css"> A:link, A:visited { text-decoration: none; } </style></head>' >> $idx_header
echo >> $idx_header

echo "<body text='$color_text' bgcolor='$color_bgcolor' link='$color_link' vlink='$color_vlink' alink='$color_alink'><font face="Arial, Helvetica"><center>" >> $idx_header
echo '<table width="'$table_width'">' >> $idx_header

echo '<tr><td><font size="5"><b>' >> $idx_header

if [ $mhd = "yes" ]; then
    echo '<font size="3">Meia Hora Depois</font><br>' >> $idx_header
fi;

# echoes title
echo $title'</b></font><br><font size="3">'$date'</font>' >> $idx_header
echo '</td></tr></table>' >> $idx_header

# page index
create_pages_index $idx_header
############################## /HEADER ##############################

############################## FOOTER ##############################
idx_footer="footer.html"

echo '</tr></table><br>' >> $idx_footer
echo '</tr></table><br>' >> $idx_footer

# page index
create_pages_index $idx_footer

# Author
if [ "$author" != "" ]; then
    echo '<p align="right"><font size="1"><b>'$credits_str $author'</b></font><br>' >> $idx_footer
    echo '<a href="mailto:'$e_mail'"><font size="1">'$e_mail'</b></font></a></p>' >> $idx_footer
fi

# Author2
if [ "$author2" != "" ]; then
    echo '<p align="right"><font size="1"><b>'$author2'</b></font><br>' >> $idx_footer
    echo '<a href="mailto:'$e_mail2'"><font size="1">'$e_mail2'</b></font></a></p>' >> $idx_footer
fi

# support shalbum!
if [ "$support_shalbum" = "yes" ]; then
    echo '<p align="right"><font size="1"><b>page created with <a href="http://sourceforge.net/projects/shalbum" target="shalbum"><u>shalbum</u></a></b></font></p>' >> $idx_footer
fi

echo '</td></tr></table>' >> $idx_footer
echo '</center></font></body></html>' >> $idx_footer

echo '<!-- '$software_revision' -->' >> $idx_footer
############################## /FOOTER ##############################

################################### CREATION #################################
aux=1
while [ $aux -le $idx_counter ]; do
    idx_filename="$idx_basename""$aux"".html"

    cat $idx_header $idx_filename $idx_footer > tmp.html
    mv tmp.html $idx_filename

    if [ $idx_filename = "index1.html" ]; then
	mv $idx_filename "$idx_basename".html
	idx_filename="$idx_basename".html
    fi

    next=$(($aux+1))
    last=$(($aux-1))

    neighbors=0
    # last page
    if [ $aux -eq 1 ]; then
	cat $idx_filename | sed s/"__LAST_PAGE__"/""/g > tmp_idx.html
    else
	neighbors=$(($neighbors+1))
	cat $idx_filename | sed s/"__LAST_PAGE__"/'<a href="'"$idx_basename""$last"".html"'"><font size="1"><b>\&lt;-<\/b><\/font><\/a> |'/g > tmp_idx.html
    fi
    mv tmp_idx.html $idx_filename

    # next page
    if [ $aux -eq $idx_counter ]; then
	cat $idx_filename | sed s/"__NEXT_PAGE__"/""/g > tmp_idx.html
    else
	neighbors=$(($neighbors+1))
	cat $idx_filename | sed s/"__NEXT_PAGE__"/'| <a href="'"$idx_basename""$next"".html"'"><font size="1"><b>-\&gt;<\/b><\/font><\/a>'/g > tmp_idx.html
    fi
    mv tmp_idx.html $idx_filename

    # index1.html
    cat $idx_filename | sed s/"index1.html"/"index.html"/g > tmp_idx.html
    mv tmp_idx.html $idx_filename

    # link to current file
    cat $idx_filename | sed s/'<a href="'"$idx_filename"'">'"$aux"'<\/a>'/'<font color="red">'"$aux"'<\/font>'/g > tmp_idx.html
    mv tmp_idx.html $idx_filename

    aux=$(($aux+1))
done;
rm $idx_header $idx_footer

# if there's only one index file, remove page number.
if [ $neighbors -eq 0 ]; then
    cat $idx_filename | sed s/'<font color="red">1<\/font>'/""/g > tmp_idx.html
    mv tmp_idx.html $idx_filename
fi;
################################### /CREATION #################################

echo "done!"

##################
# Part III: export
##################

echo -n "Exporting "

if [ "$only_index" != yes ]; then

    if [ -e album ]; then
	rm -rf album
    fi;
    mkdir album

    echo -n "thumbnails..."
    mv thumbnails album
    echo -n "vga..."
    mv vga album

fi; # !only_index

echo -n "indexes..."
mkdir -p album
rm "album/""$idx_basename"*.html 2>/dev/null
mv "$idx_basename"*.html album

echo "done!"

exit
